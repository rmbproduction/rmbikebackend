# Generated by Django 5.2 on 2025-05-26 13:26

import cloudinary.models
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("vehicle", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AdditionalService",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("price", models.CharField(max_length=255)),
                ("description", models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name="Cart",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DistancePricingRule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "service_center_latitude",
                    models.FloatField(
                        default=0.0, help_text="Latitude of the service center"
                    ),
                ),
                (
                    "service_center_longitude",
                    models.FloatField(
                        default=0.0, help_text="Longitude of the service center"
                    ),
                ),
                (
                    "free_radius_km",
                    models.DecimalField(
                        decimal_places=2,
                        default=5.0,
                        help_text="Radius in km within which service is free",
                        max_digits=5,
                    ),
                ),
                (
                    "base_charge",
                    models.DecimalField(
                        decimal_places=2,
                        default=50.0,
                        help_text="Base charge for distances beyond free radius",
                        max_digits=10,
                    ),
                ),
                (
                    "per_km_charge",
                    models.DecimalField(
                        decimal_places=2,
                        default=10.0,
                        help_text="Additional charge per km beyond free radius",
                        max_digits=10,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Distance Pricing Rules",
            },
        ),
        migrations.CreateModel(
            name="Feature",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="FieldStaff",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PricingPlan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("duration", models.CharField(max_length=255)),
                ("description", models.TextField()),
                ("recommended", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="ServiceCategory",
            fields=[
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("slug", models.SlugField(unique=True)),
                (
                    "image",
                    cloudinary.models.CloudinaryField(
                        blank=True, max_length=255, null=True, verbose_name="image"
                    ),
                ),
                ("description", models.TextField(blank=True)),
            ],
            options={
                "verbose_name_plural": "Service Categories",
            },
        ),
        migrations.CreateModel(
            name="PricingPlanFeature",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "pricing_plan",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="features",
                        to="repairing_service.pricingplan",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Service",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("slug", models.SlugField(unique=True)),
                ("description", models.TextField()),
                ("base_price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("duration", models.CharField(max_length=50)),
                ("warranty", models.CharField(max_length=100)),
                (
                    "recommended",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "image",
                    cloudinary.models.CloudinaryField(
                        blank=True, max_length=255, null=True, verbose_name="image"
                    ),
                ),
                (
                    "features",
                    models.ManyToManyField(
                        related_name="services", to="repairing_service.feature"
                    ),
                ),
                (
                    "manufacturers",
                    models.ManyToManyField(
                        related_name="services", to="vehicle.manufacturer"
                    ),
                ),
                (
                    "vehicles_models",
                    models.ManyToManyField(
                        related_name="services", to="vehicle.vehiclemodel"
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        db_column="category_uuid",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="services",
                        to="repairing_service.servicecategory",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ServiceRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "customer_name",
                    models.CharField(
                        blank=True, default="Customer", max_length=255, null=True
                    ),
                ),
                (
                    "customer_email",
                    models.EmailField(
                        blank=True,
                        default="customer@example.com",
                        max_length=254,
                        null=True,
                    ),
                ),
                (
                    "customer_phone",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("address", models.TextField(blank=True, null=True)),
                ("city", models.CharField(blank=True, max_length=100, null=True)),
                ("state", models.CharField(blank=True, max_length=100, null=True)),
                ("postal_code", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "reference",
                    models.CharField(default="RMB-DEFAULT", max_length=20, unique=True),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("confirmed", "Confirmed"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("scheduled_date", models.DateField(blank=True, null=True)),
                ("schedule_time", models.TimeField(blank=True, null=True)),
                (
                    "total_amount",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                ("notes", models.TextField(blank=True, null=True)),
                ("latitude", models.FloatField(blank=True, null=True)),
                ("longitude", models.FloatField(blank=True, null=True)),
                (
                    "distance_fee",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                ("cancelled_at", models.DateTimeField(blank=True, null=True)),
                (
                    "hidden",
                    models.BooleanField(
                        default=False,
                        help_text="If true, this request won't be displayed in the user's UI",
                    ),
                ),
                (
                    "cancelled_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="cancelled_requests",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "manufacturer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="vehicle.manufacturer",
                    ),
                ),
                (
                    "services",
                    models.ManyToManyField(
                        related_name="service_requests", to="repairing_service.service"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "vehicle_model",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="vehicle.vehiclemodel",
                    ),
                ),
                (
                    "vehicle_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="vehicle.vehicletype",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CartItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity", models.IntegerField(default=1)),
                (
                    "cart",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="repairing_service.cart",
                    ),
                ),
                (
                    "service",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="repairing_service.service",
                    ),
                ),
            ],
            options={
                "unique_together": {("cart", "service")},
            },
        ),
        migrations.CreateModel(
            name="ServicePrice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "manufacturer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="vehicle.manufacturer",
                    ),
                ),
                (
                    "service",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="repairing_service.service",
                    ),
                ),
                (
                    "vehicle_model",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="vehicle.vehiclemodel",
                    ),
                ),
            ],
            options={
                "unique_together": {("service", "manufacturer", "vehicle_model")},
            },
        ),
        migrations.CreateModel(
            name="LiveLocation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("latitude", models.FloatField()),
                ("longitude", models.FloatField()),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "field_staff",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="repairing_service.fieldstaff",
                    ),
                ),
                (
                    "service_request",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="repairing_service.servicerequest",
                    ),
                ),
            ],
            options={
                "unique_together": {("field_staff", "service_request")},
            },
        ),
        migrations.CreateModel(
            name="ServiceRequestResponse",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("accepted", models.BooleanField(default=False)),
                ("estimated_arrival_time", models.DateTimeField(blank=True, null=True)),
                (
                    "field_staff",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="repairing_service.fieldstaff",
                    ),
                ),
                (
                    "service_request",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="repairing_service.servicerequest",
                    ),
                ),
            ],
            options={
                "unique_together": {("service_request", "field_staff")},
            },
        ),
    ]
