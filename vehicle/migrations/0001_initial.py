# Generated by Django 5.2 on 2025-05-26 13:26

import cloudinary.models
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("accounts", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Manufacturer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                (
                    "image",
                    cloudinary.models.CloudinaryField(
                        blank=True, max_length=255, null=True, verbose_name="image"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="VehicleType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
                (
                    "image",
                    cloudinary.models.CloudinaryField(
                        blank=True, max_length=255, null=True, verbose_name="image"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserVehicle",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "vehicle_type_name",
                    models.CharField(
                        blank=True, db_index=True, max_length=50, null=True
                    ),
                ),
                (
                    "manufacturer_name",
                    models.CharField(
                        blank=True, db_index=True, max_length=100, null=True
                    ),
                ),
                (
                    "model_name",
                    models.CharField(
                        blank=True, db_index=True, max_length=100, null=True
                    ),
                ),
                (
                    "registration_number",
                    models.CharField(db_index=True, max_length=50, unique=True),
                ),
                ("purchase_date", models.DateField(blank=True, null=True)),
                (
                    "vehicle_image",
                    cloudinary.models.CloudinaryField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="vehicle_image",
                    ),
                ),
                ("color", models.CharField(blank=True, max_length=50)),
                (
                    "year",
                    models.PositiveIntegerField(blank=True, db_index=True, null=True),
                ),
                (
                    "mileage",
                    models.PositiveIntegerField(
                        blank=True, help_text="Kilometers driven", null=True
                    ),
                ),
                ("insurance_expiry", models.DateField(blank=True, null=True)),
                ("notes", models.TextField(blank=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="vehicles",
                        to="accounts.userprofile",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="VehicleImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image",
                    cloudinary.models.CloudinaryField(
                        max_length=255, verbose_name="image"
                    ),
                ),
                (
                    "position",
                    models.CharField(
                        choices=[
                            ("front", "Front View"),
                            ("back", "Back View"),
                            ("left", "Left Side"),
                            ("right", "Right Side"),
                            ("dashboard", "Dashboard"),
                            ("odometer", "Odometer"),
                            ("engine", "Engine"),
                            ("other", "Other"),
                        ],
                        db_index=True,
                        default="other",
                        max_length=20,
                    ),
                ),
                ("is_primary", models.BooleanField(db_index=True, default=False)),
                ("caption", models.CharField(blank=True, max_length=100)),
                ("upload_date", models.DateTimeField(auto_now_add=True, db_index=True)),
                (
                    "user_vehicle",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="vehicle.uservehicle",
                    ),
                ),
            ],
            options={
                "ordering": ["position", "-is_primary"],
            },
        ),
        migrations.CreateModel(
            name="VehicleModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(db_index=True, max_length=100)),
                (
                    "image",
                    cloudinary.models.CloudinaryField(
                        blank=True, max_length=255, null=True, verbose_name="image"
                    ),
                ),
                (
                    "image_front",
                    cloudinary.models.CloudinaryField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="image_front",
                    ),
                ),
                (
                    "image_back",
                    cloudinary.models.CloudinaryField(
                        blank=True, max_length=255, null=True, verbose_name="image_back"
                    ),
                ),
                (
                    "image_side",
                    cloudinary.models.CloudinaryField(
                        blank=True, max_length=255, null=True, verbose_name="image_side"
                    ),
                ),
                (
                    "thumbnail",
                    cloudinary.models.CloudinaryField(
                        blank=True, max_length=255, null=True, verbose_name="thumbnail"
                    ),
                ),
                (
                    "specs",
                    models.JSONField(
                        blank=True, default=dict, help_text="Technical specifications"
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "manufacturer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="vehicle.manufacturer",
                    ),
                ),
                (
                    "vehicle_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="vehicle.vehicletype",
                    ),
                ),
            ],
        ),
        migrations.AddIndex(
            model_name="uservehicle",
            index=models.Index(
                fields=["user", "registration_number"],
                name="vehicle_use_user_id_ac9a51_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="uservehicle",
            index=models.Index(
                fields=["manufacturer_name", "model_name"],
                name="vehicle_use_manufac_b7973f_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="uservehicle",
            index=models.Index(fields=["year"], name="vehicle_use_year_d2e256_idx"),
        ),
        migrations.AddIndex(
            model_name="vehicleimage",
            index=models.Index(
                fields=["user_vehicle", "is_primary"],
                name="vehicle_veh_user_ve_16766b_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="vehicleimage",
            index=models.Index(
                fields=["position", "is_primary"], name="vehicle_veh_positio_fa92fb_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="vehiclemodel",
            index=models.Index(fields=["name"], name="vehicle_veh_name_88f182_idx"),
        ),
        migrations.AddIndex(
            model_name="vehiclemodel",
            index=models.Index(
                fields=["manufacturer", "vehicle_type"],
                name="vehicle_veh_manufac_e80ffd_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="vehiclemodel",
            unique_together={("name", "manufacturer")},
        ),
    ]
